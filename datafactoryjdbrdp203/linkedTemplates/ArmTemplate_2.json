{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactoryjdbrdp203"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/06_NSG_FLOW')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ngsflow_json",
								"type": "DatasetReference"
							},
							"name": "NSGFlow"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Datapool_NSGlog",
								"type": "DatasetReference"
							},
							"name": "sinklogs"
						}
					],
					"transformations": [
						{
							"name": "flattenlogs"
						},
						{
							"name": "derivedColumnNSGFlow"
						},
						{
							"name": "selectinterest"
						}
					],
					"scriptLines": [
						"source(output(",
						"          records as (time as string, systemId as string, macAddress as string, category as string, resourceId as string, operationName as string, properties as (Version as integer, flows as (rule as string, flows as (mac as string, flowTuples as string[])[])[]))[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> NSGFlow",
						"NSGFlow foldDown(unrollMultiple(records,records.properties.flows.flows.flowTuples),",
						"     mapColumn(",
						"          records,",
						"          flowTuples = records.properties.flows.flows.flowTuples",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flattenlogs",
						"flattenlogs derive(Recordedtime = records.time,",
						"          Rulename = records.properties.flows.rule,",
						"          SourceIPAddress = split(flowTuples,\",\")[2],",
						"          DestinationIPAddress = split(flowTuples,\",\")[3],",
						"          SourcePort = split(flowTuples,\",\")[5],",
						"          Decision = split(flowTuples,\",\")[8]) ~> derivedColumnNSGFlow",
						"derivedColumnNSGFlow select(mapColumn(",
						"          Recordedtime,",
						"          Rulename,",
						"          SourceIPAddress,",
						"          DestinationIPAddress,",
						"          SourcePort,",
						"          Decision",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectinterest",
						"selectinterest sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Recordedtime as string,",
						"          Rulename as string,",
						"          SourceIPAddress as string,",
						"          DestinationIPAddress as string,",
						"          SourcePort as string,",
						"          Decision as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Recordedtime,",
						"          Rulename,",
						"          SourceIPAddress,",
						"          DestinationIPAddress,",
						"          SourcePort,",
						"          Decision",
						"     )) ~> sinklogs"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/03-pipeline-Datawarehouse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "01_Dataflow_Warehouse",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Drop Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "01_Dataflow_Warehouse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SalesOrder": {},
									"SalesOrderDetails": {},
									"CustomerStream": {},
									"ProductStream": {},
									"ProductCategory": {},
									"MaxCustomerSKStream": {},
									"FactSales": {},
									"DimCustomers": {},
									"DimProduct": {},
									"CacheSinkCustomerSK": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "datalaketestjdbr",
									"type": "LinkedServiceReference"
								},
								"folderPath": "staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Drop Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Droptables]"
						},
						"linkedServiceName": {
							"referenceName": "dp203synapsejdbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-30T22:27:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/04-pipeline1-CSV-JSON-POOL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "02_dataflow_csv_json",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "02_dataflow_csv_json",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CSVLOG": {},
									"JSONLOG": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "03-CopyData-Json-Pool",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "02_dataflow_csv_json",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalaketestjdbr",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['Correlationid']"
										},
										"sink": {
											"name": "Correlationid"
										}
									},
									{
										"source": {
											"path": "$['Operationname']"
										},
										"sink": {
											"name": "Operationname"
										}
									},
									{
										"source": {
											"path": "$['Status']"
										},
										"sink": {
											"name": "Status"
										}
									},
									{
										"source": {
											"path": "$['Eventcategory']"
										},
										"sink": {
											"name": "Eventcategory"
										}
									},
									{
										"source": {
											"path": "$['Level']"
										},
										"sink": {
											"name": "Level"
										}
									},
									{
										"source": {
											"path": "$['Subscription']"
										},
										"sink": {
											"name": "Subscription"
										}
									},
									{
										"source": {
											"path": "$['Eventinitiatedby']"
										},
										"sink": {
											"name": "Eventinitiatedby"
										}
									},
									{
										"source": {
											"path": "$['Resourcetype']"
										},
										"sink": {
											"name": "Resourcetype"
										}
									},
									{
										"source": {
											"path": "$['Resourcegroup']"
										},
										"sink": {
											"name": "Resourcegroup"
										}
									},
									{
										"source": {
											"path": "$['Resource']"
										},
										"sink": {
											"name": "Resource"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Jsonlog",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dp203synapsejdbr_datapool_PoolActivityLog",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "04-DeleteJson",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "03-CopyData-Json-Pool",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Jsonlog",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "*.json",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-30T23:08:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/05-pipeline-JSONArray-Pool')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "03_Dataflow_JSONArrays",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "03_Dataflow_JSONArrays",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CustomerArrayJSONStream": {},
									"Customercoursesink": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "datalaketestjdbr",
									"type": "LinkedServiceReference"
								},
								"folderPath": "staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-30T23:20:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/06-Pipeline-ProcessLog')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "01-CopyData-Log",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*.*",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "LogFileBinary",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataLogBinaryContainer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "04_Dataflow_SteamLogVM",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "01-CopyData-Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "04_Dataflow_SteamLogVM",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DataLogStreamVM": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-02T18:17:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/07_conditionalSplit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "05_DataFlow_ExtractResourceGroupCondicianalSplit",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "05_DataFlow_ExtractResourceGroupCondicianalSplit",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ActivityLog": {},
									"ActivitySink": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "datalaketestjdbr",
									"type": "LinkedServiceReference"
								},
								"folderPath": "staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-02T18:22:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/10-NSG_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copydata",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "*",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "insightsNSG",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ngsflow_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "06_NSG_FLOW",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "copydata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "06_NSG_FLOW",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"NSGFlow": {},
									"sinklogs": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "datalaketestjdbr",
									"type": "LinkedServiceReference"
								},
								"folderPath": "staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					},
					{
						"name": "Deletefile",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "06_NSG_FLOW",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ngsflow_json",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": "*.*",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/06_NSG_FLOW')]"
			]
		}
	]
}